[{"/Users/blakekhalil/React-Projects/crypto-app/client/src/index.js":"1","/Users/blakekhalil/React-Projects/crypto-app/client/src/components/App.js":"2","/Users/blakekhalil/React-Projects/crypto-app/client/src/components/Search.js":"3","/Users/blakekhalil/React-Projects/crypto-app/client/src/components/Coin.js":"4"},{"size":480,"mtime":1691003217893,"results":"5","hashOfConfig":"6"},{"size":3444,"mtime":1693246244765,"results":"7","hashOfConfig":"6"},{"size":1467,"mtime":1693246244766,"results":"8","hashOfConfig":"6"},{"size":3536,"mtime":1693246244765,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"x8dntc",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/blakekhalil/React-Projects/crypto-app/client/src/index.js",[],[],[],"/Users/blakekhalil/React-Projects/crypto-app/client/src/components/App.js",[],[],"/Users/blakekhalil/React-Projects/crypto-app/client/src/components/Search.js",["25"],[],"import \"../styles/Search.css\";\nimport React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowsRotate, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nfunction Search(props) {\n\n    function handleInputChange(event) {\n      const inputValue = event.target.value;\n      props.setSearch(inputValue);\n    }\n    \n    const handleFormSubmit = (event) => {\n      event.preventDefault();\n      props.handleSearch(event); // Pass the event object to the handleSearch function\n    };\n\n    function handleClick() {\n      props.getHandleClick(); // Call the passed function\n    }\n  \n\n    // console.log(data)\n    \n\n  return (\n    <div className=\"Search-body d-flex justify-content-center align-items-center\">\n    <div className=\"search-con\">\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"search-container\">\n            <button className=\"\" type=\"submit\" id=\"search\">\n            <FontAwesomeIcon icon={faMagnifyingGlass} />\n            </button>\n            <input \n              className=\"\" \n              type=\"text\" \n              placeholder=\"Search coin\" \n              value={props.search} \n              onChange={handleInputChange} \n            />\n          </div>\n        </form>\n  </div>\n\n      <div className=\"refresh\">\n        <FontAwesomeIcon icon={faArrowsRotate} onClick={handleClick} className=\"refresh-icon\" />\n      </div>\n  </div>\n\n  );\n}\n\nexport default Search; ","/Users/blakekhalil/React-Projects/crypto-app/client/src/components/Coin.js",["26","27","28","29","30"],[],"import \"../styles/Coin.css\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBitcoin, faEthereum } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction Coin(props) {\n  let coinData = props.data;\n  // let btc\n  // setTimeout(() => {\n  //   btc = coinData[0].id\n  //   console.log(btc)\n  //   console.log(coinData[0].current_price)\n  //   console.log(coinData[0].market_cap_change_percentage_24h)\n  // }, \"1000\");\n  const searchData = props.searchData;\n\n  // Checks if a seach as been made by seeing if the search object is empty or not\n  function isObjectEmpty(obj) {\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // console.log(isObjectEmpty(searchData))\n  console.log(searchData);\n\n  return (\n    <div className=\"coin-body \">\n      <div className=\"coin-header d-flex justify-content-between align-items-center\">\n       \n          <span>#</span>\n       \n        <div className=\"header-box hb-coin\">\n          <span className=\"header-coin\">Name</span>\n        </div>\n        <div className=\"header-box\">\n          <span className=\"header-price\">Price</span>\n        </div>\n        <div className=\"header-box\">\n          <span className=\"header-change\">24h</span>\n        </div>\n      </div>\n\n      {/* <div  key={index} className=\"coin-data-container d-flex justify-content-between align-items-center\">\n        <span>{index + 1}</span>\n        <div className=\"d-flex align-items-center\">\n      <img src={coin.image} className=\"coin-icon\" />\n          <span>{coin.id}</span>\n        </div>\n        <span>{coin.current_price}</span>\n        <span>{coin.market_cap_change_percentage_24h}</span>\n      </div> */}\n\n      {isObjectEmpty(searchData) ? (\n        coinData.map((coin, index) => (\n          <div\n            key={index}\n            className=\"coin-data-container d-flex justify-content-between align-items-center\"\n          >\n            <span>{index + 1}</span>\n            <div className=\"d-flex align-items-center\">\n              <img src={coin.image} className=\"coin-icon\" />\n              <span className=\"coin-name\">{coin.id}</span>\n            </div>\n            <span className=\"coin-price\">\n              ${coin.current_price.toLocaleString()}\n            </span>\n            <span\n              className=\"coin-change\"\n              style={{\n                color:\n                  coin.market_cap_change_percentage_24h > 0 ? \"green\" : \"red\",\n              }}\n            >\n              {\" \"}\n              {coin.market_cap_change_percentage_24h}%{\" \"}\n            </span>\n          </div>\n        ))\n      ) : (\n        <div className=\"coin-data-container d-flex justify-content-between align-items-center\">\n          <span></span>\n          <div className=\"d-flex align-items-center\">\n            <img src={searchData.image} className=\"coin-icon\" />\n            <span>{searchData.id}</span>\n          </div>\n          <span>${searchData.price.toLocaleString()}</span>\n          <span>{searchData.priceChange24}%</span>\n        </div>\n      )}\n\n      {/* <div className=\"coin-data-container d-flex justify-content-between align-items-center\">\n        <span>2</span>\n        <div className=\"d-flex align-items-center\">\n          <FontAwesomeIcon icon={faEthereum} className=\"coin-icon eth\" />\n          <span>ETH</span>\n        </div>\n        <span>$1,832</span>\n        <span>-2.00%</span>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Coin;\n",{"ruleId":"31","severity":1,"message":"32","line":2,"column":16,"nodeType":"33","messageId":"34","endLine":2,"endColumn":24},{"ruleId":"31","severity":1,"message":"35","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":25},{"ruleId":"31","severity":1,"message":"36","line":4,"column":10,"nodeType":"33","messageId":"34","endLine":4,"endColumn":19},{"ruleId":"31","severity":1,"message":"37","line":4,"column":21,"nodeType":"33","messageId":"34","endLine":4,"endColumn":31},{"ruleId":"38","severity":1,"message":"39","line":65,"column":15,"nodeType":"40","endLine":65,"endColumn":61},{"ruleId":"38","severity":1,"message":"39","line":87,"column":13,"nodeType":"40","endLine":87,"endColumn":65},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faBitcoin' is defined but never used.","'faEthereum' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]